type Query {
    image(id: Int): Image @proxy(get: "/$id.json")
    user(name: Int): User @proxy(get: "/profiles/$name.json")
    search(
        query: String!
        sort: String!
        order: String!
    ): SearchPage! @proxy(get: "/search?q=$query&sf=$sort&sd=$order")
}

type Image {
    aspect_ratio: Int!
    comment_count: Int!
    created_at: String!
    description: String
    downvotes: Int!
    faves: Int!
    file_name: String
    first_seen_at: String
    height: Int!
    id: Int!
    image: String
    interactions: [Interaction]
    is_optimized: Boolean!
    is_rendered: Boolean!
    mime_type: String
    orig_sha512_has: String
    original_format: String
    representations: Representations
    score: Int!
    sha512_hash: String
    source_url: String
    spoilered: Boolean
    tag_ids: [Int]
    tags: String
    updated_at: String!
    uploader_id: Int
    uploader: String
    uploader_info: User @proxy(get: "/profiles/$uploader.json")
    upvotes: Int!
    width: Int!
}

type Interaction {
    id: Int
    image_id: Int
    image: Image @proxy(get: "/$image_id.json")
    interaction_type: String
    user_id: Int
    user: User @proxy(get: "/profiles/$user_id.json")
    value: String
}

type Representations {
    thumb_tiny: String
    thumb_small: String
    thumb: String
    small: String
    medium: String
    large: String
    tall: String
    full: String
}

type SearchPage {
    search: [Image]
    total: Int!
    interactions: [Interaction]
}

type User {
    avatar_url: String
    awards: [String]
    comment_count: Int!
    created_at: String!
    description: String
    id: Int
    links: [String]
    name: String!
    post_count: Int!
    role: String!
    slug: String!
    topic_count: Int!
    uploads_count: Int!
}
